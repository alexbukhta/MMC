The design portion of this project was very interested. A couple of key things included general design decisions, setting up the arduino, setting up the mac, and setting up the connection between them. 

The difficulty in the web portion of this project was not the acutal writing of the website, but it was learning more about how websites work in general. One major thing was designing different styles of pages. In PSET7, we used headers in order to avoid a lot of actual style, rather than content, but to make some cool parts of my code, I had to bring all the files together. This made me use a lot of the config, function, and constant files that we never had to use before. In addition, I had to learn the different styling libraries, such as jquery, javascript, bootstrap, and  even a little ajax, all of which were implemented in this project. I choose to style it the way it is done, in order for it to be mobile accessible. With bootstrap and jquery-mobile, it conforms to whatever native browser/system it connects to, so that it looks smooth and user friendly no matter what the client.

Another interesting part of the project was my decision to use the arduino. A lot of the design was very new to me. The way I have it set up allows for multiple delays to make sure the server is connecting and being contacted back through the ethernet shield. I also decided to include three lights on it for a more visual queue as to when the medication dosage ends. It was a lot of fun to work with the ardunino's wiring, which also proved to be difficult, especially when it came down to playing with the pins. One of the difficulties we had was actually having a possible faulty pin, which caused the servo to move uncontrolably. 

Another big portion was setting up the mac. I decided that the appliance was too frustrating, and after much trouble writing and setting up the arduino files, I decided to do it on my mac. There I decided to use MAMP for hosting, rather than the appliance's built in apache/mysql servers, so that I could contact the arduino on my mac. This allowed for some integration of an apache/mysql server on my mac.

Finally, the style learning curve, was learning to set up the connection between them. In order to connect, I set up for the arduino to continuously scan for a connection to parse through. Then when it does, it will continue to perform a function depending on the url that came through. At the same time, I set up for a form that would manage medication to send a url request to the arduino when it receieves an order to inject medicine, as well as send a seperate ajax request to update the history. After this is done, the ardunio returns the success and the medication submitted, which allows it to return to the medication history so the user can see the last time the patient receieved medication, which would be useful for dosage/drug regulation and making sure patients are not abusing or overdosing.

Overall, this project was not too overbearing with functions, but each function was very difficult to accomplish, especially connecting functons between the client, router, and arduino server.